<%-
  style         ||= 'song'
  nolimit       ||= false
  partial       ||= false
  part_or_nolim   = partial || nolimit
  station       ||= Station.new
  id              = station.id || 0
  page            = (params[:p] || 1).to_i
  paginate        = (paginate == false || style == 'mini') ? false : true
  per           ||= Yetting.per
  songs         ||= station.songs.playlist_order_broadcasted(current_user)
  songs           = songs.limit_full(page, per) unless part_or_nolim
  has_more        = songs.length == (part_or_nolim ? per : (page*per))
  classname     ||= ''
  cover         ||= 'small'

cache_if(id > 4, "playlist_#{id}_#{station.updated_at.to_i}_#{page}_#{part_or_nolim}_#{paginate}_#{per}") do
-%>

<div id="playlist-<%= id %>-<%= page %>" class="playlist playlist-<%= style %> <%= classname %> <%= 'has-more' if has_more %>"
  data-playlist="{&quot;station&quot;: {&quot;id&quot;:&quot;<%= id %>-<%= page %>&quot;,&quot;title&quot;:&quot;<%= station.title %>&quot;,&quot;slug&quot;:&quot;<%= station.slug %>&quot;},&quot;songs&quot;: <%= songs.to_a.to_playlist %>}">
  <%= render :partial => "songs/#{style}", :collection => songs, :locals => { :station_id => id, :page => page, :cover => cover } unless songs.nil? %>
</div>

<%= link_to 'Next Page', '', :class => 'next-page control' if has_more %>

<%-
  end # end cache
-%>

<%-
  # broadcasts and follows
  if user_signed_in?
    ids = songs.map(&:matching_id)
    broadcasts = current_user.get_song_broadcasts(ids)
    follows = current_user.get_station_follows(songs.map(&:station_id).uniq!)
    listens = current_user.get_song_listens(ids)
-%>

<script type="text/javascript">
  updateBroadcastsIds = <%= raw broadcasts %>;
  updateFollowsIds = <%= raw follows %>;
  updateListensIds = <%= raw listens %>;
</script>
<%-
  end # end broadcasts and follows
-%>